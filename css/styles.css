:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-headings: #1b0960;
  --color-body: #918ca4;
  --color-border: #ccc;
  --border-radius: 30px;
}
/* must set the universal selector, before, after pseudo element, to select all elements
to have border-box, without this, the width that set to 100% of the <a> button would fill more its container.
undo this to see effect*/
*,
*::after,
*::before {
  box-sizing: border-box;
}

/* Typography */
html {
  font-size: 62.5%;
}
body {
  font-family: "Inter", Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5;
  color: var(--color-body);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem;
}
h1 {
  font-size: 7rem;
}
h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}
p {
  margin-top: 0;
}

@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }
  h1 {
    font-size: 8rem;
  }
  h2 {
    font-size: 4rem;
  }
  h3 {
    font-size: 2.4rem;
  }
}

/* Links */
a {
  text-decoration: none;
}
.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}

.link-arrow::after {
  content: "-->";
  margin-left: 5px;
  transition: margin 0.15s;
}

.link-arrow:hover::after {
  margin-left: 10px;
}
@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}
/* Badges */
.badge {
  border-radius: 20px;
  font-size: 2rem;
  font-weight: 600;
  padding: 0.5rem 2rem;
  white-space: nowrap;
}

.badge--primary {
  background: var(--color-primary);
  color: #fff;
}
.badge--secondary {
  background-color: var(--color-secondary);
  color: #fff;
}
.badge--small {
  font-size: 1.6rem;
}
@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }
  .badge--small {
    font-size: 1.2rem;
  }
}

/* Lists */
.list {
  list-style: none;
  padding-left: 0;
  color: var(--color-headings);
}
.list--inline .list__item {
  display: inline-block;
  margin-right: 2rem;
}

.list--tick {
  list-style-image: url(../images/tick.svg);
  padding-left: 3rem;
}
.list--tick .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}
@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0;
  }
}

/* Icons  */
.icon {
  width: 40px;
  height: 40px;
}
.icon--primary {
  fill: var(--color-primary);
}
.icon-container {
  background: #f3f9fa;
  width: 64px;
  height: 64px;
  border-radius: 100%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

/* Buttons */
.btn {
  border-radius: 40px;
  border: none;
  /* to have <a> get pointer effect like button */
  cursor: pointer;
  font-size: 1.8rem;
  font-weight: 600;
  margin: 1rem 0;
  padding: 2rem 3rem;
  /* to get <a> have center aligned text like button */
  text-align: center;
  text-transform: uppercase;
  /* when there is limited space, nowrap prevent words in button to get wrapped */
  white-space: nowrap;

  line-height: 1.15; /*without this, the <a> inherit line height of 1.5 from normalize.css*/
}

.btn--primary {
  color: #fff;
  background-color: var(--color-primary);
}
.btn--primary:hover {
  background: #599ef8;
}

.btn--secondary {
  color: #fff;
  background-color: var(--color-secondary);
}

.btn--secondary:hover {
  background: #40def9;
}
.btn--accent {
  background: var(--color-accent);
  color: #fff;
}
.btn--accent:hover {
  background: #fd5227;
}
/* 1/ to make button and <a> fill the width of its container, use width: 100%.
      2/ <a> is an inline element, but width and height prop doesn't have affect to an inline element=> 
        to fix that change to inline-block  */
.btn--block {
  width: 100%;
  display: inline-block;
}
.btn--outline {
  background: #fff;
  color: var(--color-headings);
  border: 2px solid var(--color-headings);
}
.btn--outline:hover {
  background: var(--color-headings);
  color: #fff;
}

@media screen and (min-width: 1024px) {
  .btn {
    font-size: 1.4rem;
  }
}

/* Inputs */
.input {
  border-radius: var(--border-radius);
  border: 1px solid var(--color-border);
  color: var(--color-headings);
  font-size: 2rem;
  outline: 0;
  padding: 1.5rem 3.5rem;
}
::placeholder {
  font-size: 1.5rem;
  color: #cdcbd7;
}
.input-group {
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  display: flex;
}
.input-group .input {
  border: 0;
  /* the flex-grow would make the input take the most part */
  flex-grow: 1;
  padding: 1.5rem 1rem;
}
.input-group .btn {
  margin: 4px;
}
@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}

/* Cards */
.card {
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3;
  overflow: hidden;
}
.card__header,
.card__body {
  padding: 2rem 3rem;
}
.card--primary {
  background: var(--color-primary);
  color: white;
}
.card--secondary {
  background: var(--color-secondary);
  color: white;
}
